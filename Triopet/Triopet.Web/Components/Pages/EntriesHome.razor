@page "/entries/"
@using Triopet.Shared.Models
@inject IApiService ApiService
@inject ISnackbar Snackbar
@inject NavigationManager Nav
@rendermode InteractiveServer
@using MudBlazor

<PageTitle>Entries</PageTitle>

<h1>EntryList</h1>

<div class="list-group">
    <MudSnackbarProvider />
    <MudTable Items="@Entry" Hover="true" Breakpoint="Breakpoint.Sm"
              Loading="@_loading" LoadingProgressColor="Color.Primary">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Date</MudTh>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small"
                       StartIcon="@Icons.Material.Filled.Add"
                       OnClick="@OnAddEntry">
                Add
            </MudButton>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Date">@context.DateOfEntry</MudTd>
            <MudTd DataLabel="Actions">
                <MudIconButton @onclick="() => OnViewEntries(context.Id)"
                               Variant="Variant.Filled" Icon="@Icons.Material.Outlined.Visibility" Color="Color.Warning"
                               aria-label="Detail">
				</MudIconButton>
			</MudTd>
        </RowTemplate>
    </MudTable>

    <h3>@Message</h3>

</div>

@code {

    private List<EntryDto> Entry { get; set; } = new();

    private string Message { get; set; } = string.Empty;

    private bool _loading = false;

    protected override async Task OnInitializedAsync()

    {

        Snackbar.Clear();

        _loading = true;

        try

        {

            Entry = (await ApiService.GetEntries()).ToList();

            await Task.Delay(300); 
            _loading = false;

        }

        catch (Exception)

        {

            Message = "Error, while trying to search for the entry list";

        }

    }
    private void OnAddEntry()
    {
        Nav.NavigateTo($"/addentry");
    }

    private void OnViewEntries(int id)

    {

        Nav.NavigateTo($"/entrydetails/{id}");

    }

}
